;;
;; Header files for CocoMonContract
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_slice_int
(cell, ()) __tact_dict_set_slice_int(cell d, int kl, slice k, int v, int vl) inline;

;; __tact_dict_get_slice_int
int __tact_dict_get_slice_int(cell d, int kl, slice k, int vl) inline;

;; __tact_dict_min_slice_int
(slice, int, int) __tact_dict_min_slice_int(cell d, int kl, int vl) inline;

;; __tact_dict_next_slice_int
(slice, int, int) __tact_dict_next_slice_int(cell d, int kl, slice pivot, int vl) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_int_neq_nullable_one
int __tact_int_neq_nullable_one(int a, int b) inline;

;; __tact_string_builder_start
tuple __tact_string_builder_start(builder b) inline;

;; __tact_string_builder_start_comment
tuple __tact_string_builder_start_comment() inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $ClaimUpdate$_load
(slice, ((cell))) $ClaimUpdate$_load(slice sc_0) inline;

;; $JettonTransfer$_store
builder $JettonTransfer$_store(builder build_0, (int, int, slice, slice, cell, int, slice) v) inline_ref;

;; $JettonTransfer$_store_cell
cell $JettonTransfer$_store_cell((int, int, slice, slice, cell, int, slice) v) inline;

;; $Claim$_load
(slice, ((int))) $Claim$_load(slice sc_0) inline;

;; $CocoMonContract$_store
builder $CocoMonContract$_store(builder build_0, (slice, slice, cell) v) inline;

;; $CocoMonContract$_load
(slice, ((slice, slice, cell))) $CocoMonContract$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_sender
_ $Context$_get_sender((int, slice, int, slice) v) inline;

;; $CocoMonContract$init$_load
(slice, ((slice))) $CocoMonContract$init$_load(slice sc_0) inline;

;; $CocoMonContract$_contract_init
(slice, slice, cell) $CocoMonContract$_contract_init(slice $tokenAddress) impure inline_ref;

;; $CocoMonContract$_contract_load
(slice, slice, cell) $CocoMonContract$_contract_load() impure inline_ref;

;; $CocoMonContract$_contract_store
() $CocoMonContract$_contract_store((slice, slice, cell) v) impure inline;

;; $global_send
int $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $CocoMonContract$_fun_forward
((slice, slice, cell), ()) $CocoMonContract$_fun_forward((slice, slice, cell) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $CocoMonContract$_fun_reply
((slice, slice, cell), ()) $CocoMonContract$_fun_reply((slice, slice, cell) $self, cell $body) impure inline;

;; $CocoMonContract$_fun_updateClaim
((slice, slice, cell), ()) $CocoMonContract$_fun_updateClaim((slice, slice, cell) $self, cell $recipients) impure inline_ref;

;; $CocoMonContract$_fun_claimable
((slice, slice, cell), int) $CocoMonContract$_fun_claimable((slice, slice, cell) $self, slice $adr) impure inline_ref;

;; $CocoMonContract$_fun_recipients
((slice, slice, cell), cell) $CocoMonContract$_fun_recipients((slice, slice, cell) $self) impure inline_ref;

;; $CocoMonContract$_fun_notify
((slice, slice, cell), ()) $CocoMonContract$_fun_notify((slice, slice, cell) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_body(slice $to, int $value, cell $body) inline;

;; $JettonTransfer$_constructor_queryId_amount_destination_responseDestination_customPayload_forwardTonAmount_forwardPayload
((int, int, slice, slice, cell, int, slice)) $JettonTransfer$_constructor_queryId_amount_destination_responseDestination_customPayload_forwardTonAmount_forwardPayload(int $queryId, int $amount, slice $destination, slice $responseDestination, cell $customPayload, int $forwardTonAmount, slice $forwardPayload) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
